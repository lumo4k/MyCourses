# -*- coding: utf-8 -*-
"""CursoAluraPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LlhTGsI4Pit4uNlahBrpvWcpMAN5Yets

# Dando início ao curso de Python
"""

nome = 'Luan'

idade = 21

print(f'Meu nome é {nome} e minha idade é {idade}')

"""# Criando funções em python"""

def saudacao():
  nome = input('Qual seu nome')
  print(f'Bem vindo {nome}')

saudacao()



"""# Função sem parâmetros e com convesão para int"""

nome = 'Giovanni'

def saudacoesParametros(nome_da_pessoa):
  print(f'Olá {nome_da_pessoa}')

saudacoesParametros('Giovanni')

idade = 17

def verificaDirigir():
  idade = int(input(f'Digite sua idade {nome} '))
  if(idade >= 18):
    print(f'Você pode dirigir {nome}')
  else:
    print(f'Você não pode dirigir {nome}')

verificaDirigir()

"""# Função IF com parâmetros"""

def funcaoComParametros(nomeDaPessoa, idade):
  if(idade >= 18):
    print(f'Você pode dirigir {nomeDaPessoa}')
  else:
    print(f'Você não pode dirigir {nomeDaPessoa}')

funcaoComParametros('Luan', 15)

"""# Listas"""

idade = 23

type(idade)

idades = [21, 23, 18, 15, 13]

type(idades)

idades[1]

idades[0:4]

for idade in idades:
  print(f'você tem {idade} anos')



"""# Booleano"""

IdadeMaior = idades[0] >= 18
IdadeMaior

permissoes = []

def PodeDirigir(idades, permissoes):
  for idade in idades:
    if idade >= 18:
      permissoes.append(True)
    else:
      permissoes.append(False)

PodeDirigir(idades, permissoes)

permissoes

for permissao in permissoes:
  if permissao == True:
    print('Pode Dirigir')
  else:
    print('Não pode dirigir')



"""# Tipos de uma Lista"""

lista = ['Luan', 23, True, 2.50, '200']

for elemento in lista:
  print(f'O elemento {elemento} da lista é do tipo: ', type(elemento))



"""# Import"""

from random import randrange,seed

seed(10)

randrange(0, 100)

notas_matematicas = []

for notas in range(8):
  notas_matematicas.append(randrange(0,11))

notas_matematicas



"""# Matplotlib"""

import matplotlib.pyplot as plt

x = list(range(1,9))
y = list(notas_matematicas)

plt.plot(x, y, marker='o')

plt.title('Notas matemáticas')
plt.xlabel('Provas')
plt.ylabel('Notas')
plt.show()

